ext_if="wlan0"
int_if="nfe0"

table <ssh> const { 192.168.12.0/28 192.168.10.0/28 }
table <dmz> const { 192.168.12.0/28  }
table <intserv>  const { 192.168.10.0/28 }
table <deny>     persist { }
table <spamd>    persist { }


# Options: tune the behavior of pf, default values are given.
#set timeout { interval 10, frag 30 }
#set timeout { tcp.first 120, tcp.opening 30, tcp.established 86400 }
#set timeout { tcp.closing 900, tcp.finwait 45, tcp.closed 90 }
#set timeout { udp.first 60, udp.single 30, udp.multiple 60 }
#set timeout { icmp.first 20, icmp.error 10 }
#set timeout { other.first 60, other.single 30, other.multiple 60 }
#set timeout { adaptive.start 0, adaptive.end 0 }
set limit { states 150000, frags 8000 }
set loginterface $ext_if
set optimization normal
set block-policy drop
#set require-order yes
set fingerprints "/etc/pf.os"
set skip on { lo carp }

scrub in on $ext_if

# Queueing: rule-based bandwidth control.
altq on $ext_if bandwidth 8Mb priq queue { q_elow q_estd q_edmz q_epri q_eack }
queue  q_elow	priority 0
queue  q_estd	priority 1 priq(default)
queue  q_edmz	priority 3
queue  q_epri	priority 5
queue  q_eack	priority 15

altq on $int_if bandwidth 1Gb priq queue { q_ilow q_istd q_ipri q_iack }
queue  q_ilow	priority 0
queue  q_istd	priority 1 priq(default)
queue  q_ipri	priority 5
queue  q_iack	priority 15

# NAT
nat-anchor "ftp-proxy/*"
rdr-anchor "ftp-proxy/*"

no rdr on $ext_if inet proto tcp from <dmz> to ($ext_if) port http
rdr pass on $ext_if inet proto tcp from <spamd> to ($ext_if) port http -> 127.0.0.1 port 8080
no rdr on lo0 from any to any

# RULEZ
block log all

pass quick on $ext_if proto pfsync
pass quick on $ext_if proto carp keep state

# too many connections
block in log quick inet from <deny>      probability 80%

# block NMAP
block in log quick inet from any os NMAP probability 80%

# WEB
pass  in  on $ext_if proto tcp to ($ext_if) port 8080 flags S/SA keep state \
    (max-src-conn 300, max-src-conn-rate 30/3, overload <deny> flush global) \
	queue(q_estd q_eack)

pass  in  on $ext_if proto tcp from <dmz> to ($ext_if) port www flags S/SA keep state \
	queue(q_edmz q_eack)

# FTP
pass  in  on $ext_if proto tcp to ($ext_if) port ftp \
    flags S/SA synproxy state \
	(max-src-conn 100, max-src-conn-rate 30/3, overload <deny> flush global) \
	    queue(q_estd q_eack)

pass  in  on $ext_if proto tcp to ($ext_if) port >49151 \
    flags S/SA synproxy state \
	(max-src-conn 500, max-src-conn-rate 50/3, overload <deny> flush global) \
	    queue(q_estd q_eack)

# ssh
pass  in log on $ext_if inet proto tcp from <ssh> to ($ext_if) port ssh \
    flags S/SA synproxy state \
	(max-src-conn 50, max-src-conn-rate 5/3, overload <deny> flush global) \
	    queue(q_epri q_eack)

pass  in log on $int_if inet proto tcp from <ssh> to ($int_if) port ssh \
    flags S/SA synproxy state \
	queue(q_ipri q_iack)

# MySQL, synproxy doesn't work
pass  in  on $int_if proto tcp from <intserv> to ($int_if) port 3306 \
    flags S/SA keep state queue(q_istd q_iack)

# ntp 
pass  in  on $ext_if proto udp from <dmz> to ($ext_if) port ntp \
    keep state queue(q_epri q_eack)

# munin
pass  in  on $int_if proto tcp from <intserv> to ($int_if) port 4949 \
    flags S/SA keep state queue(q_istd q_iack)

# ping
pass  in  on $ext_if inet proto icmp from any to ($ext_if) icmp-type echoreq \
    keep state queue q_elow
pass  in  on $int_if inet proto icmp from any to ($int_if) icmp-type echoreq \
    keep state queue q_ilow

# i'm
pass  out on $ext_if inet from ($ext_if) to any \
    flags S/SA modulate state queue(q_estd q_eack)

pass  out on $ext_if inet from ($ext_if) to <dmz> \
    flags S/SA modulate state queue(q_edmz q_eack)

anchor "ftp-proxy/*"
