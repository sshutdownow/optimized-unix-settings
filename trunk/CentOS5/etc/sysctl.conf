# Kernel sysctl configuration file for Red Hat Linux
#
# For binary values, 0 is disabled, 1 is enabled.  See sysctl(8) and
# sysctl.conf(5) for more details.

# Controls IP packet forwarding
net.ipv4.conf.default.forwarding = 1
net.ipv4.ip_forward = 1

# Turn on Source Address Verification in all interfaces to prevent some spoofing attacks
net.ipv4.conf.default.rp_filter = 1
net.ipv4.conf.all.rp_filter = 1

# Don't proxy arp for anyone
net.ipv4.conf.default.proxy_arp = 0
net.ipv4.conf.all.proxy_arp = 0

# Fix the "promiscuous ARP" thing
net.ipv4.conf.eth0.arp_ignore = 1
net.ipv4.conf.eth0.arp_announce = 1

# IPv4 ARP cache timeout
net.ipv4.neigh.eth0.base_reachable_time = 60

net.ipv4.neigh.default.gc_thresh1 = 1024
net.ipv4.neigh.default.gc_thresh2 = 2048
net.ipv4.neigh.default.gc_thresh3 = 4096


# Ignore ICMP broadcasts
net.ipv4.icmp_echo_ignore_broadcasts = 1

# Ignore bogus ICMP errors
net.ipv4.icmp_ignore_bogus_error_responses = 1

# But don't ignore directed pings
net.ipv4.icmp_echo_ignore_all = 0

# Do not accept ICMP redirects (prevent MITM attacks)
net.ipv4.conf.all.accept_redirects = 0
net.ipv6.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0
# _or_
# Accept ICMP redirects only for gateways listed in our default
# gateway list (enabled by default)
# net.ipv4.conf.all.secure_redirects = 1

net.ipv4.conf.default.send_redirects = 1
# Do not send ICMP redirects (we are not a router)
net.ipv4.conf.all.send_redirects = 0

# Do not accept IP source route packets (we are not a router)
net.ipv4.conf.all.accept_source_route = 0
#net.ipv6.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0

# Log spoofed, source routed and redirects
net.ipv4.conf.all.log_martians = 1

# Turn on SYN-flood protections.  Starting with 2.6.26, there is no loss
# of TCP functionality/features under normal conditions.  When flood
# protections kick in under high unanswered-SYN load, the system
# should remain more stable, with a trade off of some loss of TCP
# functionality/features (e.g. TCP Window scaling).
net.ipv4.tcp_syncookies = 1

# The contents of /proc/<pid>/maps and smaps files are only visible to 
# readers that are allowed to ptrace() the process
# kernel.maps_protect = 1

# The maximum number of packets allowed to queue when an interface receives packets faster than the kernel can process them.
net.core.netdev_max_backlog = 2500

# Default setting in bytes of the socket receive buffer
net.core.rmem_default = 262144
# Default setting in bytes of the socket send buffer
net.core.wmem_default = 262144

# Maximum socket receive buffer size which may be set by using the SO_RCVBUF socket option
net.core.rmem_max = 16777216
# Maximum socket send buffer size which may be set by using the SO_SNDBUF socket option
net.core.wmem_max = 16777216


# Тюнинг буферов для TCP и UDP соединений (для машин с большим объемом ОЗУ)
net.ipv4.tcp_rmem = 8192 87380 16777216
net.ipv4.tcp_wmem = 8192 65536 16777216

net.ipv4.udp_rmem_min = 16384
net.ipv4.udp_wmem_min = 16384

net.ipv4.tcp_mem = 8388608 12582912 16777216
net.ipv4.udp_mem = 8388608 12582912 16777216

# Widen local port range
net.ipv4.ip_local_port_range = 32000 65535

# Maximal number of TCP sockets not attached to any user file handle,
# held by system. This limit exists only to prevent simple DoS attacks.
net.ipv4.tcp_max_orphans = 8192

# Bump up TCP socket queuer to help with syn floods
net.ipv4.tcp_max_syn_backlog = 4096

# If there is packet reordering in the network,
# reordering could end up being interpreted as a packet loss too easily.
net.ipv4.tcp_reordering = 20

# Enable Explicit Congestion Notification
net.ipv4.tcp_ecn = 1

# Enable window scaling as defined in RFC1323.
net.ipv4.tcp_window_scaling = 1

# Enables calculation of RTT in a more accurate way (RFC 1323) than the retransmission timeout
net.ipv4.tcp_timestamps = 1

# Enables selective acknowledgment, which improves performance by selectively acknowledging packets received out of order
net.ipv4.tcp_sack = 1

net.ipv4.ip_default_ttl = 128

# don't cache ssthresh from previous connection
net.ipv4.tcp_no_metrics_save = 1
net.ipv4.tcp_moderate_rcvbuf = 1

# maximum size of the routing cache
net.ipv4.route.max_size = 4194304

# if kernel version > 2.6.20 parameter renamed to net.netfilter.nf_conntrack_max & net.nf_conntrack_max
# and set /sys/module/ip_conntrack/parameters/hashsize to the same value
net.ipv4.netfilter.ip_conntrack_max = 524288

# Increase number of incoming connections backlog
net.core.somaxconn = 1024

# Понижаем приоритет начала своппинга
vm.swappiness = 30

# Начинаем принудительно чистить буферы, когда они занимают более 50% размера ОЗУ
vm.dirty_ratio = 50

# Ограничиваем размер файлового кеша, предотвращая начало свопинга
vm.pagecache = 90
#vm.pagecache=1 15 30

# Controls the number of Huge Pages
#vm.nr_hugepages=512

vm.vfs_cache_pressure = 50
vm.min_free_kbytes = 65536
vm.mmap_min_addr = 65536

# increase the number of possible inotify(7) watches
fs.inotify.max_user_watches = 65536

fs.file-max = 65536

# Controls the System Request debugging functionality of the kernel
kernel.sysrq = 1

# Controls the maximum size of a message, in bytes
kernel.msgmnb = 65536

# Controls the default maxmimum size of a mesage queue
kernel.msgmax = 65536

# Controls the maximum size in bytes of a single shared memory segment
kernel.shmmax = 4294967295

# Controls the maximum number of shared memory segments, in pages
kernel.shmall = 268435456

# Controls the system wide maximum number of shared memory segments.
kernel.shmmni = 4096

# Controls whether core dumps will append the PID to the core filename
# Useful for debugging multi-threaded applications
kernel.core_uses_pid = 1

kernel.core_pattern = core.%e.%p

# Automatically reboot server after a kernel panic
kernel.panic = 15

# Turn on execshield
kernel.exec-shield = 1
kernel.randomize_va_space = 1
